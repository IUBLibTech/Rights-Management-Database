<div id="adder_overlay" data-animation-offscreen="true">
  <i id="adder_close" class="fa fa-window-close" style="font-size:30px;float: right;"><span class=sr-only>close menu</span></i>
  <div id="adder_content"></div>
</div>
<div class="title_div">
  <%
    @cl = User.current_user_copyright_librarian?
    @msg = nil
    case @avalon_item.review_state
    when AvalonItem::REVIEW_STATE_DEFAULT
      @msg = "Request Review"
    when AvalonItem::REVIEW_STATE_REVIEW_REQUESTED
      @msg = @cl ? "Respond to Collection Manager" : "Add Additional Comments"
    when AvalonItem::REVIEW_STATE_WAITING_ON_CM
      @msg = @cl ? "Add Additional Comments" : "Respond to Copyright Librarian"
    when AvalonItem::REVIEW_STATE_WAITING_ON_CL
      @msg = @cl ? "Respond to Collection Manager" : "Add Additional Comments"
    when AvalonItem::REVIEW_STATE_ACCESS_DETERMINED
      @msg = "Access Determined"
    else
      raise "How did we get to this ReviewState: #{@avalon_item.review_state}"
    end
  %>
  <h3 class="">
    <%= link_to(@atom_feed_read.avalon_item_url, {target: "_blank", id: "foo"}) do %>
      <span class="avalon_item_title rvt-text-bold">
        <%= @avalon_item.title %>
        <i class="fa fa-external-link xxsmall"><span class=sr-only>opens a new window</span></i>
      </span>
    <% end %>
    <span class="avalon_item_title rvt-text-bold">
      <%= @avalon_item.rivet_button_badge %>
    </span>
    <div>
        <% c = (@avalon_item.review_state == AvalonItem::REVIEW_STATE_ACCESS_DETERMINED ? "rvt-disabled-button" : 'rvt-button')  %>
        <button id="mark_needs_reviewed" class='lower_tooltip <%= c %>' data-avalon-item-id=<%= @avalon_item.id %>>
          <%= @msg %>
          <% unless @avalon_item.review_comments.size == 0 %>
            <div class="lower_tooltiptext">
              <ul class="rvt-plain-list conversation">
                <% @avalon_item.review_comments.order("id DESC").each do |c| %>
                  <li class="<%= c.copyright_librarian? ? "cl_comment" : "cm_comment"%>">
                    <b><%= c.creator %> (<%= c.created_at.strftime('%m/%d/%Y') %>)</b>: <%= c.comment %>
                  </li>
                <% end %>
              </ul>
            </div>
          <% end %>
        </button>
    </div>
  </h3>
</div>
<div class="avalon_item_metadata">
  <div id="access_div">
    <div>
      <label for=access>Access Determination:</label>
      <%= select_tag :access, options_for_select(@avalon_item.allowed_access_determinations.collect{|a| [a,a]}, @avalon_item.access_determination) %>
    </div>
    <div>
      <label for=access>System Calculated Access Determination:</label><br>
      <span id="sys_acc">
        <%= @avalon_item.calc_access %>
      </span>
    </div>
  </div>
  <div id="history_div">
    <div class="rvt-dropdown">
      <button type="button" class="rvt-button" data-dropdown-toggle="dropdown-navigation" aria-haspopup="true" aria-expanded="false" >
        <span>History</span>
        <svg aria-hidden="true" class="rvt-m-left-xs" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
          <path fill="currentColor" d="M8,12.46a2,2,0,0,1-1.52-.7L1.24,5.65a1,1,0,1,1,1.52-1.3L8,10.46l5.24-6.11a1,1,0,0,1,1.52,1.3L9.52,11.76A2,2,0,0,1,8,12.46Z"/>
        </svg>
      </button>
      <div class="rvt-dropdown__menu" id="dropdown-navigation" aria-hidden="true" role="menu" >
        <% @avalon_item.past_access_decisions.order("id DESC").each do |d| %>
          <div class="past_access_dec_div noselect <%= d.copyright_librarian? ? 'cl_dec' : '' %>">
            <%= d.decision %> (<%= d.changed_by %>: <%= d.created_at.strftime("%l:%M%p %Y/%m/%d") %> )
          </div>
        <% end %>
      </div>
    </div>
  </div>
  <div id="note_div">
    <%= render partial: 'avalon_items/notes' %>
  </div>
  <div id="recordings_div" class="rvt-p-all-sm bgGray">
    <h2>Recordings In This Avalon Item </h2>
    <% @avalon_item.recordings.each do |recording| %>
      <%= render partial: 'recordings/ajax_show', locals: {recording: recording} %>
    <% end %>
  </div>
</div>
<div class="">
  <h3 class="accordion accordion-title active accordion-trigger" aria-expanded=true>Avalon Metadata
    <span class="accordion-icon"></span></h3>
  <div class="rvt-grid m-fadeIn">
    <table class="json_table">
      <tbody>
      <tr>
        <td colspan="4"><button id="add_person_button"  class="rvt-button rvt-m-left-lg">Add Person/Entity</button><button id="add_work_button" class="rvt-button rvt-m-left-lg">Add Work</button></td>
      </tr>
      <tr>
        <th>Title</th>
        <td colspan="3" class="adder"><%= @json["title"] %></td>
      </tr>
      <tr>
        <th>Unit</th>
        <td>
          <%= @avalon_item.pod_unit %>
        </td>
        <th>Creator</th>
        <td>
          <ul class="rvt-plain-list">
            <% @json["fields"]["creator"]&.each do |mc| %>
              <li class="adder people"><%= mc %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      <tr>
        <th>Uniform Title</th>
        <td class="adder work"><%= @json["uniform_title"] %></td>
        <th>Date Created</th>
        <td><%= @json["fields"]["date_created"] %></td>
      </tr>
      <tr>
        <th>Translated Title</th>
        <td class="adder work">
          <%= @json["translated_title"] %>
        </td>
        <th>Date Issued</th>
        <td class="adder date issue"><%= @json["fields"]["date_issued"] %></td>
      </tr>
      <tr>
        <th>Avalon Collection</th>
        <td><%= @json["collection"] %></td>
        <th>Copyright Date</th>
        <td class="adder date copyright"><%= @json["fields"]["copyright_date"] %></td>
      </tr>
      <tr>
        <th>Main Contributors</th>
        <td>
          <ul class="rvt-plain-list">
            <% @json["main_contributors"]&.each do |mc| %>
              <li class="adder people"><%= mc %></li>
            <% end %>
          </ul>
        </td>
        <th>Publisher</th>
        <td>
          <ul class="rvt-plain-list">
            <% @json["fields"]["publisher"]&.each do |mc| %>
              <li><%= mc %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      <tr>
        <th>Publication Date</th>
        <td class="adder date publication">
          <%= @json["publication_date"] %>
        </td>
        <th>Physical Description</th>
        <td>
          <ul class="rvt-plain-list">
            <% @json["fields"]["physical_description"]&.each do |mc| %>
              <li><%= mc %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      <tr>
        <th>Bibliographic ID</th>
        <td><%= @json["fields"]["bibliographic_id"] %></td>
        <th>Statement of Responsibility</th>
        <td><%= @json["fields"]["statement_of_responsibility"] %></td>
      </tr>
      <tr>
        <th>Note</th>
        <td><%= @json["fields"]["note"] %></td>
        <th>Contributor</th>
        <td>
          <ul class="rvt-plain-list">
            <% @json["fields"]["contributor"]&.each do |mc| %>
              <li class="adder"><%= mc %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      <tr>
        <th>Language</th>
        <td>
          <ul class="rvt-plain-list">
            <% @json["fields"]["language"]&.each do |mc| %>
              <li><%= mc %></li>
            <% end %>
          </ul>
        </td>
        <th>Terms of Use</th>
        <td><%= @json["fields"]["terms_of_use"] %></td>
      </tr>
      <tr>
        <th>Table of Contents</th>
        <td>
          <ul class="rvt-plain-list">
            <% @json["fields"]["table_of_contents"]&.each do |mc| %>
              <li class='adder work'><%= mc %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      </tbody>
    </table>
  </div>
</div>
<div>
  <h3 class="accordion accordion-title active accordion-trigger" aria-expanded="true">JSON <span class="accordion-icon"></span></h3>
  <div class="rvt-grid m-fadeIn">
    <pre>
      <%= JSON.pretty_generate @json %>
    </pre>
  </div>
</div>
<div class="rvt-dropdown__menu aiJsonMenu" id="dropdown-navigation" aria-hidden="true" role="menu">
  <button id="addPersonButton">Add Person/Entity</button>
  <button id="addWorkButton">Add Work</button>
</div>

<script type="text/javascript" charset="utf-8">
    let avalon_item_id = <%= @avalon_item.id %>;
    $(document).ready(function() {
        hookAccordion();
        hookButtons();
        hookAiContextMenu();
        <% unless @avalon_item.review_state == AvalonItem::REVIEW_STATE_ACCESS_DETERMINED %>
        hookNeedsReview();
        <% end %>
        //hookReviewCommentSlide();
        hookAvalonNoteButton();
        hookAccessSelects();
    });

    function ajaxAccess(decision) {
        $.ajax({
            url: '<%= ajax_avalon_item_access_decision_path %>',
            method: "POST",
            data: {
                id: <%= @avalon_item.id %>,
                access: decision
            },
            success: function(response) {
              swal.fire({
	              title: 'Updated Record',
	              text: "This Avalon Item's Access Determination was successfully updated."
              })
            },
            error: function(jqXHR, textStatus, errorThrown) {
              reloadPage("Error","An error occurred while trying to update the access determination:<br/><pre>"+ jqXHR.responseText +"</pre>")
            }
        })
    }
    function ajaxPerformanceAccess(performance_id, decision) {
        $.ajax({
            url: '<%= ajax_performance_access_determination_path %>',
            method: "POST",
            data: {
                id: performance_id,
                access: decision
            },
            success: function(response) {
	            loadCalcedAccess();
            	swal.fire({
                title: 'Updated',
                html: "This Performance's access determination was successfully updated"
              })
            },
            error: function(jqXHR, textStatus, errorThrown) {
            	reloadPage("Error", "An error occurred while trying to update the Performance's access determination. Please contact Andrew Albrecht")
            }
        })
    }
    function ajaxTrackAccess(performance_id, decision) {
        $.ajax({
            url: '<%= ajax_track_access_determination_path %>',
            method: "POST",
            data: {
                id: performance_id,
                access: decision
            },
            success: function(response) {
	            loadCalcedAccess();
              swal.fire({
                title: 'Updated',
                html: "This Track's access determination was successfully updated"
              })
            },
            error: function(jqXHR, textStatus, errorThrown) {
            	reloadPage("Error", "An error occurred while trying to set this Track's access determination. Please contact Andrew Albrecht")
            }
        })
    }
    function hookNeedsReview() {
        $('#mark_needs_reviewed').click(function() {
            swal.fire({
                title: 'Comments for <%= @cl ? 'Collection Manager' : 'Copyright Librarian' %>',
                input: "textarea",
                showCancelButton: true,
                confirmButtonText: '<%= if @avalon_item.needs_review
                                      @avalon_item.review_state == AvalonItem::REVIEW_STATE_WAITING_ON_CM ? 'Respond' : 'Add Comment'
                                    else
                                      'Request Review'
                                    end
                                %>',
                showLoaderOnConfirm: true,
                preConfirm: (comment) => {
                    let form = new FormData();
                    form.append("id", "<%= @avalon_item.id %>");
                    form.append("comment", comment);
                    fetch("<%= ajax_post_needs_review_path %>", {
                        method: 'post',
                        body: form,
                        headers: {
                            'X-CSRF-Token': "<%= form_authenticity_token %>"
                        }
                    }).then(response => {
                        response.text().then(function(text) {
                            if (response.ok) {
                                location.reload();
                            } else {
                                swal.fire({
                                    type: 'error',
                                    title: 'Failed to Update Avalon Item',
                                    html: text
                                })
                            }
                        })

                    })
                }
            })
        });
    }

</script>
